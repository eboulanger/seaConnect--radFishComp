}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF"),
cex = 1,
ncol=2)
map.scale(3.5, 30.15,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
map.scale(3.5, 30.15,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF"),
cex = 1,
ncol=2)
map.scale(3.5, 31,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF"),
cex = 1,
ncol=2)
map.scale(3.5, 31,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF"),
cex = 1,
ncol=2)
map.scale(9, 31.5,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF"),
cex = 1,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
# get mean ancestry by sampling cell and add geographic data
ancestry3_cell <- summarise(group_by(ancestry3_lon, SamplingCell),
Cluster1 = mean(Cluster1),
Cluster2 = mean(Cluster2),
Cluster3 = mean(Cluster3)) %>%
left_join(sampling[,c("SamplingCell", "Longitude","Latitude","Ecoregion")], by = "SamplingCell") %>%
as.data.frame()
View(ancestry3_cell)
View(ancestry3_cell)
# plot map
pie3_pop <- ancestry3_cell[, 2:4] %>%
data.matrix(rownames.force = NA)
lon_pop <- as.numeric(as.vector(ancestry3_cell$Longitude))
lat_pop <- as.numeric(as.vector(ancestry3_cell$Latitude))
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 1,
ncol=2)
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 1,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 4)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 1,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 1,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 1)
map.axes(cex.axis=1)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 0.7,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.7)
map.axes(cex.axis=0.7)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19,
col=c("#2121D9","#9999FF","#DF0101"),
cex = 0.8,
ncol=2)
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
?legend
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="n")
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="n")
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(8, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
?map.scale
?text
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8, col = "red")
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8, bg = "red")
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8, bg = "red")
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8, fill = "red")
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8, bty = "o")
map.scale2 <- map.scale
map.scale(6, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.scale2 <- map.scale
fix(map.scale2)
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.9, 31.2,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.9, 31.1,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 2", "Cluster3"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF","#DF0101"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.7, 31.1,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
pdf(file="sar_adaptive.3.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry3_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie3_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 3", "Cluster2"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#DF0101","#9999FF"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.7, 31.1,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
View(ancestry2_lon)
attributes(qlist)
# Q plot
# only K = 3
plotQ(qlist[1], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
# get mean ancestry by sampling cell and add geographic data
ancestry2_cell <- summarise(group_by(ancestry2_lon, SamplingCell),
Cluster1 = mean(Cluster1),
Cluster2 = mean(Cluster2)) %>%
left_join(sampling[,c("SamplingCell", "Longitude","Latitude","Ecoregion")], by = "SamplingCell") %>%
as.data.frame()
# plot map
pie2_pop <- ancestry2_cell[, 2:4] %>%
data.matrix(rownames.force = NA)
lon_pop <- as.numeric(as.vector(ancestry2_cell$Longitude))
lat_pop <- as.numeric(as.vector(ancestry2_cell$Latitude))
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF","#DF0101"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster 3", "Cluster2"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#DF0101","#9999FF"),
bty ="o", bg ="gray90",box.col = "gray90")
View(ancestry2_lon)
View(ancestry2_cell)
# plot map
pie2_pop <- ancestry2_cell[, 2:3] %>%
data.matrix(rownames.force = NA)
lon_pop <- as.numeric(as.vector(ancestry2_cell$Longitude))
lat_pop <- as.numeric(as.vector(ancestry2_cell$Latitude))
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#DF0101"))
}
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster2"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.7, 31.1,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
pdf(file="sar_adaptive.2.Q.piemap.pdf", width = 7, height = 5)
carte=map("worldHires", xlim=c(-8,37), ylim=c(29.5,47), col="gray90", fill=TRUE)
#points(membership2_pop$lon, membership2_pop$lat, pch=19, col="red", cex=0.5)
for(i in 1:nrow(ancestry2_cell)) {
floating.pie(lon_pop[i], lat_pop[i], pie2_pop[i, ], radius = 0.4,
col = c("#2121D9","#9999FF"))
}
legend("bottomleft",
legend = c("Cluster 1", "Cluster2"),
title = "Ancestry fractions",
pch=19, cex = 0.8, ncol = 2,
col=c("#2121D9","#9999FF"),
bty ="o", bg ="gray90",box.col = "gray90")
map.scale(5.7, 31.1,relwidth = 0.15, metric = TRUE, ratio = FALSE, cex = 0.8)
map.axes(cex.axis=0.8)
dev.off()
#coord <- read.table("../../../00-Data/01-Diplodus/coord_sar_297Ind.txt")
sampling <- read.table("../../../00-Data/coord_seaconnect_tous.txt", sep = "\t", header = T,
strip.white = T, stringsAsFactors = F)
ancestry2_coord <- cbind(id, ancestry2)
ancestry2_coord <- merge(ancestry2_coord, sampling[,c("SamplingCell","Ecoregion_adj","Longitude","Latitude")])
ancestry2_lon <- ancestry2_coord[order(ancestry2_coord$Longitude),]  # order by longitude
ancestry3_coord <- cbind(id, ancestry3)
ancestry3_coord <- merge(ancestry3_coord, sampling[,c("SamplingCell","Ecoregion_adj","Longitude","Latitude")])
ancestry3_lon <- ancestry3_coord[order(ancestry3_coord$Longitude),]  # order by longitude
# read in / transform data as qlist
# make own qlist from dataframes
qlist <- list("sar_adaptive.2.Q"=ancestry2_lon[,3:4],"sar_adaptive.3.Q"=ancestry3_lon[,3:5])
qlist <- lapply(qlist,"rownames<-",ancestry2_lon$ID) # add individual labels
attributes(qlist)
# add grouping labels
label <- as.data.frame(ancestry2_lon$Ecoregion_adj, stringsAsFactors = F)
colnames(label) <- "Ecoregion"
str(label)
label2 <- as.data.frame(gsub(" ","\n", label[,1]), stringsAsFactors = F) # labels will appear on two lines
colnames(label2) <- "Ecoregion"
str(label2)
# Q plot
# only K = 3
plotQ(qlist[1], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
# Q plot
# only K = 3
plotQ(qlist[1], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
length(unique(ancestry2_lon$Ecoregion_adj))
# Q plot
# only K = 3
plotQ(qlist[2], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
# both K = 2 and K = 3
plotQ(qlist[1:2], returnplot = F, exportplot = T, showindlab = F,
imgoutput="join",
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.3,
splabsize = 3, divsize = 0.1,
showlegend = T,legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
#coord <- read.table("../../../00-Data/01-Diplodus/coord_sar_297Ind.txt")
sampling <- read.table("../../../00-Data/coord_seaconnect_tous.txt", sep = "\t", header = T,
strip.white = T, stringsAsFactors = F)
ancestry2_coord <- cbind(id, ancestry2)
ancestry2_coord <- merge(ancestry2_coord, sampling[,c("SamplingCell","Ecoregion_adj","Longitude","Latitude")])
ancestry2_lon <- ancestry2_coord[order(ancestry2_coord$Longitude),]  # order by longitude
ancestry3_coord <- cbind(id, ancestry3)
ancestry3_coord <- merge(ancestry3_coord, sampling[,c("SamplingCell","Ecoregion_adj","Longitude","Latitude")])
ancestry3_lon <- ancestry3_coord[order(ancestry3_coord$Longitude),]  # order by longitude
# read in / transform data as qlist
# make own qlist from dataframes
qlist <- list("sar_adaptive.2.Q"=ancestry2_lon[,3:4],"sar_adaptive.3.Q"=ancestry3_lon[,3:5])
qlist <- lapply(qlist,"rownames<-",ancestry2_lon$ID) # add individual labels
attributes(qlist)
# add grouping labels
label <- as.data.frame(ancestry2_lon$Ecoregion_adj, stringsAsFactors = F)
colnames(label) <- "Ecoregion"
str(label)
label2 <- as.data.frame(gsub(" ","\n", label[,1]), stringsAsFactors = F) # labels will appear on two lines
colnames(label2) <- "Ecoregion"
str(label2)
# Q plot
# only K = 3
plotQ(qlist[1], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
# both K = 2 and K = 3
plotQ(qlist[1:2], returnplot = F, exportplot = T, showindlab = F,
imgoutput="join",
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.3,
splabsize = 3, divsize = 0.1,
showlegend = T,legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
# Q plot
# only K = 3
plotQ(qlist[2], returnplot = F, exportplot = T, showindlab = F,
grplab=label2, grplabsize=1,linesize=0.1,pointsize=1, grplabpos = 0.4,
splabsize = 3, divsize = 0.1,
showlegend = T, legendtextsize = 2, legendkeysize = 2,
ordergrp = TRUE, subsetgrp=c("Alboran\nSea", "Western\nMediterranean","Central\nMediterranean","Adriatic\nSea","Ionian\nSea","Tunisian\nPlateau","Aegean\nSea", "Levantine\nSea"),
grplabangle=0, imgtype = "pdf")
